// Generated by CoffeeScript 1.6.3
(function() {
  var Bakery, Equip, Player, Room, generateID, seedID, _;

  _ = require('underscore');

  Player = require('../public/js/player');

  Bakery = require('../public/js/bakery');

  Equip = require('../public/js/equip');

  seedID = 1;

  generateID = function() {
    return seedID++;
  };

  Room = (function() {
    function Room() {
      this._audienceCount = 0;
      this._players = {};
      this._globalBakeries = Bakery.newBakeries();
    }

    Room.prototype.enterAudience = function() {
      console.log('audience++');
      return this._audienceCount += 1;
    };

    Room.prototype.leaveAudience = function() {
      console.log('audience--');
      return this._audienceCount -= 1;
    };

    Room.prototype.participatePlayer = function(name) {
      var id, player;
      console.log('player++');
      id = generateID;
      player = Player.newPlayer(id, name);
      return this._players[id] = player;
    };

    Room.prototype.resumePlayer = function(id) {
      return this._players[id];
    };

    Room.prototype.isReady = function() {
      return _.size(this._players) === this._audienceCount;
    };

    Room.prototype.allPlayers = function() {
      return _.values(this._players);
    };

    Room.prototype.player = function(name) {
      return this._players[name];
    };

    Room.prototype.updatePlayer = function(player) {
      return this._players[player.id] = player;
    };

    Room.prototype.buyBakery = function(player, bakery) {
      var price;
      price = Bakery.calcPrice(this._globalBakeries, bakery);
      if (player.totalCookie >= price) {
        player.totalCookie -= price;
        player.bakeries[bakery] += 1;
        this._globalBakeries[bakery] += 1;
        return price;
      } else {
        return null;
      }
    };

    Room.prototype.sellBakery = function(player, bakery) {
      var price;
      price = Math.floor(Bakery.calcPrice(this._globalBakeries, bakery) / 2);
      if (player.bakeries[bakery] >= 1) {
        player.totalCookie += price;
        player.bakeries[bakery] -= 1;
        this._globalBakeries[bakery] -= 1;
        return price;
      } else {
        return null;
      }
    };

    Room.prototype.globalBakeries = function() {
      return this._globalBakeries;
    };

    return Room;

  })();

  module.exports = Room;

}).call(this);
