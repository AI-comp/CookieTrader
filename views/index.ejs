<!doctype html>
<html role="application">
<meta charset=utf-8>
<title>Cookie Trader</title>
<link rel="stylesheet" href="css/style.css">
<body>
<div id="wrapper">
<div id="l-header">
  <h1>Cookie Trader</h1>
</div>
<div id="l-container">
  <div>
    <table id="info">
    <thead>
      <tr><th>Global
        <th>Me
        <th>Player X
        <th>Player Y
        <th>Player Z
    <tbody>
      <tr><td><h2>Store</h2>
        <div class="upgrades">
          <div class="item">A</div>
          <div class="item">B</div>
          <div class="item">C</div>
          <div class="item">D</div>
        </div>
        <td class="cps"><span id="my-total-cookie" class="total-cookie">1,000</span> Cookies<br><span id="my-cps" class="cps">100</span> CpS
          <td class="cps"><span class="total-cookie">1,000</span> <span class="cps">Cookies</span><br>100 CpS
        <td class="cps"><span class="total-cookie">1,000</span> > <span class="cps">Cookies</span><br>100 CpS
        <td class="cps"><span class="total-cookie">1,000</span> > <span class="cps">Cookies</span><br>100 CpS
      <tr><td>Cursor<br> 23 Cookie<br>Total 4
        <td><div class="cps">3 x 1 CpS</div>
          <div class="upgrades-mini">
            <div id="bakery-Cursor" class="item">A</div>
            <div id="bakery-Grandma" class="item">A</div>
            <div id="bakery-Farm" class="item">A</div>
            <div id="bakery-Factory" class="item">A</div>
            <div id="bakery-Mine" class="item">A</div>
            <div id="bakery-Shipment" class="item">A</div>
            <div id="bakery-AlchemyLab" class="item">A</div>
            <div id="bakery-Portal" class="item">A</div>
            <div id="bakery-TimeMachine" class="item">A</div>
            <div id="bakery-AntimatterCondenser" class="item">A</div>
          </div>
        <td><div class="cps">1 x 1 CpS</div>
        <td><div class="cps">0 x 1 CpS</div>
        <td><div class="cps">0 x 1 CpS</div>
      <tr><td>Granma<br> 100 Cookie<br>Total 0
        <td><div class="cps">0 x 5 CpS</div>
        <td><div class="cps">0 x 5 CpS</div>
        <td><div class="cps">0 x 5 CpS</div>
        <td><div class="cps">0 x 5 CpS</div>
      <tr><td>Farm<br> 500 Cookie<br>Total 0
        <td><div class="cps">0 x 40 CpS</div>
        <td><div class="cps">0 x 40 CpS</div>
        <td><div class="cps">0 x 40 CpS</div>
        <td><div class="cps">0 x 40 CpS</div>
    </table>
  </div>
  <div class=typing>
    <div>INPUTTHISTEXT....</div>
  </div>
</div>
<div id="l-footer">
  This application inspires to <a href="http://orteil.dashnet.org/cookieclicker/">Cookie Clicker</a>
</div>
</div>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="/socket.io/socket.io.js" type="text/javascript"></script>
<script src="/js/game.js" type="text/javascript"></script>
<script>
$(function() {

  var pretty = function (val) {
    return '' + Math.floor(val);
  };

  var FPS = 10;

  var player = new Player(0, 10);
  player.hook('totalCookie', function (v) {
    $('#my-total-cookie').text(pretty(player.totalCookie));
  });
  player.hook('currentCps', function (v) {
    $('#my-cps').text(v);
  });
  player.totalCookie = 1000;
  player.currentCps = 0;

  // WebSocketサーバに接続
  var socket = io.connect('http://localhost:5000/');

  socket.on('connect', function(){
    console.log('connect!')
  });

  socket.on('disconnect', function(){
    console.log("disconnect from server");
  });

  // メッセージ受信イベントを処理
  socket.on('message', function(msg) {
    console.log('Received : ' + msg);
  });

  socket.on('buy', function (obj) {
    var status = obj.status;
    if (status === 'ok') {
      var bakeryName = obj.bakeryName,
          price = parseInt(obj.price, 10);
      player.buy(bakeryName, price);
    } else {
      // TODO
    }
  });

  $(document).keydown(function (e) {
    if (e.keyCode === 32 || e.keyCode === 13) {
      player.clickCookie();
    }
  });

  $('.item').click(function (e) {
    var id = e.target.id;
    id.match(/bakery-(.+)/);
    var bakeryName = RegExp.$1;
    socket.emit('buy', { 'bakery': bakeryName, 'totalCookie': player.totalCookie })
  });

  var prevTime = new Date().getTime();
  var loop = function() {
    var curTime = new Date().getTime();

    player.bake((curTime - prevTime) / 1000);

    prevTime = curTime;
    setTimeout(loop, 1000 / FPS);
  };
  loop();

});
</script>
