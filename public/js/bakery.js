// Generated by CoffeeScript 1.6.3
(function() {
  (function(define) {
    return define([], function() {
      var baseCPSs, calcCPS, calcPrice, computeCps, newBakeries, priceOf, prices;
      newBakeries = function() {
        return {
          'Cursor': 0,
          'Grandma': 0,
          'Farm': 0,
          'Factory': 0,
          'Mine': 0,
          'Shipment': 0,
          'AlchemyLab': 0,
          'Portal': 0,
          'TimeMachine': 0,
          'AntimatterCondenser': 0
        };
      };
      baseCPSs = {
        'Cursor': 0.1,
        'Grandma': 0.5,
        'Farm': 2,
        'Factory': 10,
        'Mine': 40,
        'Shipment': 100,
        'AlchemyLab': 400,
        'Portal': 6666,
        'TimeMachine': 98765,
        'AntimatterCondenser': 999999
      };
      prices = {
        'Cursor': 15,
        'Grandma': 100,
        'Farm': 500,
        'Factory': 3000,
        'Mine': 10000,
        'Shipment': 40000,
        'AlchemyLab': 200000,
        'Portal': 1666666,
        'TimeMachine': 123456789,
        'AntimatterCondenser': 3999999999
      };
      computeCps = function(base, add, mult, bonus) {
        if (!bonus) {
          bonus = 0;
        }
        return (base + add) * (Math.pow(2, mult) + bonus);
      };
      calcCPS = function(bakery, amount, bakeries, equips) {
        var add, bonus, cps, mult, name, num;
        cps = (function() {
          switch (bakery) {
            case 'Cursor':
              add = equips['ReinforcedIndexFinger'] ? 0.1 : 0;
              mult = 0;
              if (equips['CarpalTunnelPreventionCream']) {
                mult += 1;
              }
              if (equips['Ambidextrous']) {
                mult += 1;
              }
              bonus = 0;
              if (equips['ThousandFingers']) {
                bonus += 0.1;
              }
              if (equips['MillionFingers']) {
                bonus += 0.5;
              }
              if (equips['BillionFingers']) {
                bonus += 2;
              }
              if (equips['TrillionFingers']) {
                bonus += 10;
              }
              if (equips['QuadrillionFingers']) {
                bonus += 20;
              }
              if (equips['QuintillionFingers']) {
                bonus += 100;
              }
              if (equips['SextillionFingers']) {
                bonus += 200;
              }
              num = 0;
              for (name in bakeries) {
                if (name !== 'Cursor') {
                  num += bakeries[name];
                }
              }
              bonus *= num;
              return computeCps(baseCPSs[bakery], add, mult, bonus);
            case 'Grandma':
              add = 0;
              if (equips['ForwardsFromGrandma']) {
                add += 0.3;
              }
              if (equips['OneMind']) {
                add += bakeries['Grandma'] * 0.02;
              }
              if (equips['CommunalBrainsweep']) {
                add += bakeries['Grandma'] * 0.02;
              }
              if (equips['ElderPact']) {
                add += bakeries['Portal'] * 0.05;
              }
              mult = 0;
              if (equips['SteelPlatedRollingPins']) {
                mult += 1;
              }
              if (equips['LubricatedDentures']) {
                mult += 1;
              }
              if (equips['PruneJuice']) {
                mult += 1;
              }
              if (equips['DoubleThickGlasses']) {
                mult += 1;
              }
              if (equips['FarmerGrandmas']) {
                mult += 1;
              }
              if (equips['WorkerGrandmas']) {
                mult += 1;
              }
              if (equips['MinerGrandmas']) {
                mult += 1;
              }
              if (equips['CosmicGrandmas']) {
                mult += 1;
              }
              if (equips['TransmutedGrandmas']) {
                mult += 1;
              }
              if (equips['AlteredGrandmas']) {
                mult += 1;
              }
              if (equips['GrandmasGrandmas']) {
                mult += 1;
              }
              if (equips['Antigrandmas']) {
                mult += 1;
              }
              if (equips['BingocenterResearchFacility']) {
                mult += 2;
              }
              if (equips['RitualRollingPins']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'Farm':
              add = 0;
              if (equips['CheapHoes']) {
                add += 1;
              }
              mult = 0;
              if (equips['Fertilizer']) {
                mult += 1;
              }
              if (equips['CookieTrees']) {
                mult += 1;
              }
              if (equips['GeneticallyModifiedCookies']) {
                mult += 1;
              }
              if (equips['GingerbreadScareclows']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'Factory':
              add = 0;
              if (equips['SturdierConveyorBelts']) {
                add += 4;
              }
              mult = 0;
              if (equips['ChildLabor']) {
                mult += 1;
              }
              if (equips['Sweatshop']) {
                mult += 1;
              }
              if (equips['RadiumReactors']) {
                mult += 1;
              }
              if (equips['Recombobulators']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'Mine':
              add = 0;
              if (equips['SugarGas']) {
                add += 10;
              }
              mult = 0;
              if (equips['Megadrill']) {
                mult += 1;
              }
              if (equips['Ultradrill']) {
                mult += 1;
              }
              if (equips['Ultimadrill']) {
                mult += 1;
              }
              if (equips['HBombMining']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'Shipment':
              add = 0;
              if (equips['VanillaNebulae']) {
                add += 1666;
              }
              mult = 0;
              if (equips['Wormholes']) {
                mult += 1;
              }
              if (equips['FrequentFlyer']) {
                mult += 1;
              }
              if (equips['WarpDrive']) {
                mult += 1;
              }
              if (equips['ChocolateMonoliths']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'AlchemyLab':
              add = 0;
              if (equips['Antimony']) {
                add += 100;
              }
              mult = 0;
              if (equips['EssenceOfDough']) {
                mult += 1;
              }
              if (equips['TrueChocolate']) {
                mult += 1;
              }
              if (equips['Ambrosia']) {
                mult += 1;
              }
              if (equips['AquaCrustulae']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'Portal':
              add = 0;
              if (equips['AncientTablet']) {
                add += 1666;
              }
              mult = 0;
              if (equips['InsaneOatlingWorkers']) {
                mult += 1;
              }
              if (equips['SoulBond']) {
                mult += 1;
              }
              if (equips['SanityDance']) {
                mult += 1;
              }
              if (equips['BraneTransplant']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'TimeMachine':
              add = 0;
              if (equips['FluxCapacitors']) {
                add += 9876;
              }
              mult = 0;
              if (equips['TimeParadoxResolver']) {
                mult += 1;
              }
              if (equips['QuantumConundrum']) {
                mult += 1;
              }
              if (equips['CausalityEnforcer']) {
                mult += 1;
              }
              if (equips['YestermorrowComparators']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            case 'AntimatterCondenser':
              add = 0;
              if (equips['SugarBosons']) {
                add += 99999;
              }
              mult = 0;
              if (equips['StringTheory']) {
                mult += 1;
              }
              if (equips['LargeMacaronCollider']) {
                mult += 1;
              }
              if (equips['BigBangBake']) {
                mult += 1;
              }
              if (equips['ReverseCyclotrons']) {
                mult += 1;
              }
              return computeCps(baseCPSs[bakery], add, mult);
            default:
              return console.log('invalid bakery');
          }
        })();
        return cps * amount;
      };
      priceOf = function(bakery) {
        return prices[bakery];
      };
      calcPrice = function(bakeries, bakery) {
        return prices[bakery] * Math.pow(1.1, bakeries[bakery]);
      };
      return {
        newBakeries: newBakeries,
        calcCPS: calcCPS,
        priceOf: priceOf,
        calcPrice: calcPrice
      };
    });
  })(typeof define !== "undefined" && define !== null ? define : typeof module !== "undefined" && module !== null ? function(deps, factory) {
    return module.exports = factory();
  } : function(deps, factory) {
    return this['Bakery'] = factory();
  });

}).call(this);
